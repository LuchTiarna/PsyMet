source('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
unpackedFitDat <- unnest(fitDat, .drop = FALSE)
unpackedFitDat <- unnest(fitDat, data, .drop = FALSE)
unpackedFitDat
ggplot(data=unpackedFitDat) + geom_line(mapping=aes(x=level, y=hitPercentage) + geom_line(x=level, y=fitedHitPercentage) + geom_point(x=level, y=simulatedHitPercentage) + facet_grid(c(sigmoid, core) ~ c(fitSigmoid, fitCore)))
ggplot(data=unpackedFitDat) + geom_line(mapping=aes(x=level, y=hitPercentage) + geom_line(x=level, y=fitedHitPercentage) +  facet_grid(c(sigmoid, core) ~ c(fitSigmoid, fitCore)))
ggplot(data=unpackedFitDat) + geom_line(mapping=aes(level, y=hitPercentage) + geom_line(x=level, y=fitedHitPercentage) + geom_point(x=level, y=simulatedHitPercentage) + facet_grid(c(sigmoid, core) ~ c(fitSigmoid, fitCore)))
ggplot(data=unpackedFitDat) + geom_line(mapping=aes(level, y=hitPercentage) + geom_line(x=level, y=fitedHitPercentage) + geom_point(x=level, y=simulatedHitPercentage)
Q
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
debugSource('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
responses
debugSource('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
source('~/Bakalarka/PsyMet/R/multigenerate.R')
source('~/Bakalarka/PsyMet/R/multigenerate.R')
library(tidyverse)
debugSource('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
#'
source('~/Bakalarka/PsyMet/R/PSfunction.R')
"gumbel_l",ab, 0, 0, 0.5, 1
PSfunction(0,0,"gumbel_l",ab, x, 0.5, 1)
PSfunction(0,0,"gumbel_l","ab", x, 0.5, 1)
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", x, 0.5, 1)
PSfunction(0,0,"gumbel_l","ab", x, 0.5, 1)
coref()
body(coref)
library(PsyMet)
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", x, 0.5, 1)
y <- PSfunction(0,0,"gumbel_l","ab", c(0:10)/10, 0.5, 1)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
y <- PSfunction(0,0,"gumbel_l","ab", c(0:10)/10, 0.5, 1)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
ab.inverse.cdf(c(0.5),1,2)
ab.inverse.cdf(c(0.5),1,2)
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
library(PsyMet)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
formals(coreName)
coreName
library(PsyMet)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
library(PsyMet)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
...
unlist(...)
list(...)
library(PsyMet)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE)
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
debugSource('~/Bakalarka/PsyMet/R/PSfunction.R')
n
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
PSfunction(0,0,"gumbel_l","ab", y, 0.5, 1, inverse = TRUE, type="pdf")
PSfunction(0,0,"gumbel_l","ab", 0, 0.5, 1, inverse = TRUE, type="pdf")
PSfunction(0,0,"gumbel_l","ab", 0, 0.5, 1, inverse = FALSE, type="pdf")
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf"), colour="red") + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf"), colour="red")
))
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf")), colour="red") + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf")), colour="red")
library(tidyverse)
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf")), colour="red") + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf"))) + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf")), colour="red")
q
q
source('~/Bakalarka/PsyMet/R/PSfunction.R')
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf"))) + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="cdf"))) + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = TRUE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="cdf"))) + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 1, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0, 1, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0, 0.5, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:10)/10, 0.5, 0.5, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:10)/10, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.5, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.5, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.25, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.25, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = FALSE, type="cdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = FALSE, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = FALSE, type="pdf")))
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = FALSE, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = FALSE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = TRUE, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/50, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 1, 0.25, inverse = TRUE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.1, inverse = TRUE, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.1, inverse = TRUE, type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.1, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.5, 0.1,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.1, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.1,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.1, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.2,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.2, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/50, 0.75, 0.2,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.75, 0.2, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.75, 0.2,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2, type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2, inverse = FALSE,type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2,inverse = FALSE,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2, inverse = TRUE,type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2,inverse = TRUE,  type="pdf")), colour="red")
ggplot() + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2, inverse = TRUE,type="cdf"))) + geom_line(mapping=aes(x=(0:100)/100, y=PSfunction(0,0,"gumbel_l","ab", (0:100)/100, 0.5, 0.2,inverse = TRUE,  type="pdf")), colour="red")
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
dat$treshold <- PSfunction(dat$gamma, dat$lambda, dat$sigmoid, dat$core, 0.5, dat$param1, dat$param2, inverse = TRUE)
dat$treshold <- apply(dat,PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- apply(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- lapply(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- sapply(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- sapply(dat, PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- mutate(dat, PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- transmute(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold <- transform(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
dat$data[[1]]
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat$treshold <- transform(dat, FUN=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat$treshold
dat$treshold <- transform(dat, PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
length(dat$treshold[[1]])
dat$treshold[[2]]
dat$treshold[[1]]
dat$treshold[[3]]
dat <- transform(dat, PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat$treshold
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
dat <- transform(dat, PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- transform(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 1), c("logistic","linear", 0, 0, 0, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat
dat <- mutate(dat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 1), c("logistic","linear", 0, 0, 0, 1), c("gauss","linear", 0, 0, 0, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat <- mutate(dat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 1), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 0, 1)), x, rep(10,length(x)))
dat <- mutate(dat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat <- mutate(dat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 0, 1)), x, rep(10,length(x)))
dat <- mutate(dat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat <- mutate(dat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat
PSfunction(0, 0, gumbel_r, ab, -1.9321034, 1, 8)
PSfunction(0, 0, gauss, logy, -3.3665129, 0, 1)
PSfunction(0, 0, gumbel_l, ab, 0.1334871, 0.5, 1)
PSfunction(0, 0, gumbel_r, ab, -1.9321034, 1, 8)
PSfunction(0, 0, gumbel_l, ab, 0.1334871, 0.5, 1)
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage)) + geom_point(data=dat[[1]], mapping=aes(x=treshold, y=(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf")))
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage)) + geom_point(data=dat[[1]], mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf")))
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage)) + geom_point(mapping=aes(x=dat[[1]]$treshold, y=PSfunction(dat[[1]]$gamma, dat[[1]]$lambda, dat[[1]]$sigmoid, dat[[1]]$core, dat[[1]]$treshold, dat[[1]]$param1, dat[[1]]$param2)))
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage)) + geom_point(mapping=aes(x=dat$treshold[[1]], y=PSfunction(dat$gamma[[1]], dat$lambda[[1]], dat$sigmoid[[1]], dat$core[[1]], dat$treshold[[1]], dat$param1[[1]], dat$param2[[1]])))
ggplot() + geom_line(data=dat$data[[2]], mapping=aes(x=level, y=hitPercentage)) + geom_point(mapping=aes(x=dat$treshold[[2]], y=PSfunction(dat$gamma[[2]], dat$lambda[[2]], dat$sigmoid[[2]], dat$core[[2]], dat$treshold[[2]], dat$param1[[2]], dat$param2[[2]])))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 0, 1)), x, rep(10,length(x)))
dat[[3]]
dat[3,
]
dat[3,7]
dat[3,7]$data
View(dat[3,7]$data)
View(dat[4,7]$data)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 4, 1)), x, rep(10,length(x)))
View(dat[4,7]$data)
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), x, rep(10,length(x)))
ggplot() + geom_line(data=dat$data[[1]], mapping=aes(x=level, y=hitPercentage))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
source('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
paramNames
fitFormula
fit
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitFormula
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
source('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,length(x)))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,length(20)))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,20))
-10:10
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
dat
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
ggplot() + geom_line(data=dat$data[[5]], mapping=aes(x=level, y=fitHitPercentage))
ggplot() + geom_line(data=dat$data[[4]], mapping=aes(x=level, y=fitHitPercentage))
ggplot() + geom_line(data=fitDat$data[[4]], mapping=aes(x=level, y=fitHitPercentage))
ggplot() + geom_line(data=fitDat$data[[4]], mapping=aes(x=level, y=fitedHitPercentage))
ggplot() + geom_line(data=fitDat$data[[1]], mapping=aes(x=level, y=fitedHitPercentage))
ggplot() + geom_line(data=fitDat$data[[2]], mapping=aes(x=level, y=fitedHitPercentage))
ggplot() + geom_line(data=fitDat$data[[3]], mapping=aes(x=level, y=fitedHitPercentage))
ggplot() + geom_line(data=fitDat$data[[4]], mapping=aes(x=level, y=fitedHitPercentage))
ggplot() + geom_line(data=fitDat$data[[5]], mapping=aes(x=level, y=fitedHitPercentage))
fitDat4data[[4]]
fitDat$data[[4]]
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
dat
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
dat
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
responses
responses
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
source('~/Bakalarka/PsyMet/R/multifit.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 1, 8), c("logistic","linear", 0, 0, 0, 1), c("gauss","logy", 0, 0, 10, 1)), -10:10/5, rep(10,21))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
library(PsyMet)
library(tidyverse)
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
debugSource('~/Bakalarka/PsyMet/R/multifit.R')
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "linear")))
fitDat
dat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
dat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
dat <- mutate(fitDat, slope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
dat <- multifit
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
library(PsyMet)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
source('~/Bakalarka/PsyMet/R/multigenerate.R')
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
dat
dat <- multifit(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat
dat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
source('~/Bakalarka/PsyMet/R/PSfunction.R')
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fiDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fiDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fiDat <- mutate(fitDat, slope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDat
fiDat <- mutate(fitDat, slope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fiDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fiDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fiDat <- mutate(fitDat, slope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
fiDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDat
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
fiDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fiDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fiDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fiDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1)), x, rep(10,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDat
PSfunction(0,0.4116228, gauss, linear, 1, 1, 1)
fitDataVisualization <- unnest(fitDat, data)
fitDataVisualization
head(fitDataVisualization)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(c(sigmoid, core, gamma, lambda, param1, param2)~c(fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(c(sigmoid, core)~c(fitSigmoid, fitCore, fitGamma))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(c(sigmoid, core)~c(fitSigmoid, fitCore))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(c(sigmoid)~c(fitSigmoid))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(c(sigmoid)~c(fitSigmoid))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid,core~ fitSigmoid,core)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ fitSigmoid + core)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ fitSigmoid + core)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ fitSigmoid + core)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ param1 + param2)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ fitSigmoid + fitcore)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core~ fitSigmoid + fitCore)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core + gamma + lambda + param1 + param2~fitSigmoid + fitCore + fitGamma + fitLambda + fitParam1 + fitParam2)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(sigmoid + core + gamma + lambda + param1 + param2~fitSigmoid + fitCore)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage)) + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
5/1.25
5/1.1
5/1.2
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1),c("gauss","linear", 0, 0, 0.5, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(10,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1),c("gauss","linear", 0, 0, 0.5, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(30,length(x)))
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1),c("gauss","linear", 0, 0, 0.5, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDataVisualization <- unnest(fitDat, data)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
dat <- multigenerate(list(c("gumbel_l","ab", 0, 0, 0.5, 1), c("gumbel_r","ab", 0, 0, 0.5, 1),c("gauss","linear", 0, 0, 0.5, 1), c("logistic","linear", 0, 0, 0.5, 1)), x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- mutate(fitDat, treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- mutate(fitDat, slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- mutate(fitDat, fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- mutate(fitDat, fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDataVisualization <- unnest(fitDat, data)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
fitDataVisualization <- unnest(fitDat, data)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) +geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2))) +geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2))) + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
fitDataVisualization <- unnest(fitDat, data)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) +geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2), colour="green")) +geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow") + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
ggplot(data=fitDataVisualization) + geom_line( mapping=aes(x=level, y=hitPercentage)) + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red") + geom_point( mapping=aes(x=level, y=simulatedHitPercentage)) +geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2)), colour="green") +geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow") + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
head(fitDat)
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
library(PsyMet)
library(tidyverse)
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDat
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDat
fitDataVisualization <- unnest(fitDat, data)
plot <- ggplot(data=fitDataVisualization)
plot <- plot + geom_line( mapping=aes(x=level, y=hitPercentage))
plot <- plot + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red")
plot <- plot + geom_point( mapping=aes(x=level, y=simulatedHitPercentage))
plot <- plot + geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2)), colour="green")
plot <- plot + geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow")
plot <- plot + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
plot
plot
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDataVisualization <- unnest(fitDat, data)
plot <- ggplot(data=fitDataVisualization)
plot <- plot + geom_line( mapping=aes(x=level, y=hitPercentage))
plot <- plot + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red")
plot <- plot + geom_point( mapping=aes(x=level, y=simulatedHitPercentage))
plot <- plot + geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2)), colour="green")
plot <- plot + geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow")
plot <- plot + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
plot
length(fitDat$data)
fitDat$data
fitDat
length(fitDat)
row(fitDat)
row_number(fitDat)
row_number(fitDat$data)
count(fitDat)
rowsum(fitDat)
nrow(fitDat)
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fitDat
fitDat <- unnest(fitDat, data = )
fitDat <- unnest(fitDat, data)
fitDat
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=count())
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=count(data))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fitDat
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=NROW(data))
fitDat
