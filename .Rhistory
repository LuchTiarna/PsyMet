plot <- plot + geom_line( mapping=aes(x=level, y=hitPercentage))
plot <- plot + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red")
plot <- plot + geom_point( mapping=aes(x=level, y=simulatedHitPercentage))
plot <- plot + geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2)), colour="green")
plot <- plot + geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow")
plot <- plot + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
plot
plot
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fitDataVisualization <- unnest(fitDat, data)
plot <- ggplot(data=fitDataVisualization)
plot <- plot + geom_line( mapping=aes(x=level, y=hitPercentage))
plot <- plot + geom_line( mapping=aes(x=level, y=fitedHitPercentage), colour="red")
plot <- plot + geom_point( mapping=aes(x=level, y=simulatedHitPercentage))
plot <- plot + geom_point( mapping=aes(x=treshold, y=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2)), colour="green")
plot <- plot + geom_point( mapping=aes(x=fitTreshold, y=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2)), colour="yellow")
plot <- plot + facet_grid(fitSigmoid + fitCore~sigmoid + core + gamma + lambda + param1 + param2)
plot
length(fitDat$data)
fitDat$data
fitDat
length(fitDat)
row(fitDat)
row_number(fitDat)
row_number(fitDat$data)
count(fitDat)
rowsum(fitDat)
nrow(fitDat)
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fitDat
fitDat <- unnest(fitDat, data = )
fitDat <- unnest(fitDat, data)
fitDat
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=count())
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=count(data))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fitDat
x <- log(1:5/1.2)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, 0.5, 1),
c("gumbel_l","ab", 0, 0, 0.5, 1),
c("gauss","linear", 0, 0, 0.5, 1),
c("logistic","linear", 0, 0, 0.5, 1))
, x, rep(30,length(x)))
fitDat <-  multifit(dat, list(c("gumbel_l", "ab"), c("gauss", "linear"), c("logistic", "ab"), c("gumbel_l", "weibull")))
fitDat <- fitDat %>% filter(fitGamma + fitLambda < 1)
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(treshold=PSfunction(gamma, lambda, sigmoid, core, 0.5, param1, param2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(slope=PSfunction(gamma, lambda, sigmoid, core, treshold, param1, param2, type="pdf"))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitTreshold=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, 0.5, fitParam1, fitParam2, inverse = TRUE))
fitDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(fitSlope=PSfunction(fitGamma, fitLambda, fitSigmoid, fitCore, fitTreshold, fitParam1, fitParam2, type="pdf"))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=nrow(data))
fidDat <- fitDat %>% group_by(sigmoid, core, gamma, lambda, param1, param2, fitSigmoid, fitCore, fitGamma, fitLambda, fitParam1, fitParam2) %>% mutate(numberOfLevels=NROW(data))
fitDat
debugSource('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
library(tidyverse)
library(PsyMet)
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
debugSource('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
tres
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
fitDat
View(fitDat)
fitDat
debugSource('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
mean(abs(dat$obsNumber - tres))
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
View(fitDat)
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
View(fitDat)
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
View(fitDat)
source('~/Bakalarka/PsyMet/R/scripts/dataVisualisation.R')
plot
source('~/Bakalarka/PsyMet/R/scripts/dataVisualisation.R')
plot
source('~/Bakalarka/PsyMet/R/scripts/dataVisualisation.R')
plot
source('~/Bakalarka/PsyMet/R/scripts/dataGeneration.R')
source('~/Bakalarka/PsyMet/R/scripts/dataVisualisation.R')
plot
rm(list=ls())
library(PsyMet)
library(dplyr)
library(PsyMet)
library(dplyr)
library(tibble)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(30,length(x)),
10
)
x <- c(-log(seq(2,10,2)),log(seq(2,10,2)), 0)
#Multigenerate
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(30,length(x)),
10
)
library(tidyr)
#Multigenerate
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(30,length(x)),
10
)
dat
table <- dat$data[[1]]
table
results <-bind_rows(results, row)
library(dplyr)
source('~/Documents/Bakalarka/FunRobScripts/dataGeneration.R')
library(PsyMet)
library(tidyr)
library(ggplot2)
source('~/Documents/Bakalarka/FunRobScripts/dataGeneration.R')
results
View(results)
rm(list=ls())
source('~/Documents/Bakalarka/FunRobScripts/dataGeneration.R')
source('~/Documents/Bakalarka/FunRobScripts/dataGeneration.R')
View(fitData)
source('~/Documents/Bakalarka/FunRobScripts/dataVisualisation.R')
plot
source('~/Documents/Bakalarka/FunRobScripts/dataVisualisation.R')
source('~/Documents/Bakalarka/FunRobScripts/dataVisualisation.R')
plot
source('~/Documents/Bakalarka/FunRobScripts/featureExtracting.R')
source('~/Documents/Bakalarka/FunRobScripts/featureExtracting.R')
source('~/Documents/Bakalarka/FunRobScripts/featureExtracting.R')
source('~/Documents/Bakalarka/FunRobScripts/featureExtracting.R')
source('~/Documents/Bakalarka/FunRobScripts/dataVisualisation.R')
plot
rm(list = ls())
library(PsyMet)
library(PsyMet)
library(PsyMet)
library(tidyr)
c(5,0.8.9,0.2) %>% sum()
c(5,0.8,9,0.2) %>% sum()
c(5,0.8,9,0.2) tidyr::%>% sum()
library(help="stats")
utils::combn(2,2)
utils::combn(2,3)
utils::combn(5,3)
utils::combn(5,2)
utils::combn(5,4)
utils::combn(5,1)
utils::combn(5,2)
utils::combn(5,2,simplify = TRUE)
utils::combn(5,2,simplify = FALSE)
utils::combn(5,2)
pro(1:3)
prod(1:3)
prod(1:8)
prod(40:(40*0.75))
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
rm(PearsnoX2())
rm(PearsnoX2
)
pnorm(c(0:8))
qnorm(c(0:8))
dnorm(c(0:8))
rnorm(c(0:8))
rbinom(8,1,0.57)
rbinom(8,0,0.57)
rbinom(8,2,0.57)
rbinom(8,1,0.57)
pnorm((-2:2)/2)
pnorm((-2:2)/2)
x <- pnorm((-2:2)/2)
likelihood_log(x,x, rep(10,length(x)))
rep(10,length(x))
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
likelihood_log(x,x, rep(10,length(x)))
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
debugSource('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
likelihood_log(x,x, rep(10,length(x)))
debugSource('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
debugSource('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
debugSource('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
choose(5,2)
choose(5,4)
choose(5,3)
choose(5,0)
choose(5,1)
choose(5,2)
choose(5,3)
choose(5,4)
choose(5,5)
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
likelihood_log(x,x, rep(10,length(x)))
rm(x)
rm(likelihood_log())
rm(likelihood_log)
library(PsyMet)
source('~/Documents/Bakalarka/PsyMet/R/likelihood_log.R', echo=TRUE)
library(PsyMet)
library(PsyMet)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
x <- c(-log(seq(2,10,2)),log(seq(2,10,2)), 0)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
library(PsyMet)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
library(PsyMet)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
hits <- gama + (1 - gama - lambda) * base::do.call(paste(sigmoidName, ".orig.cdf", sep=""), list(xc))
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
library(PsyMet)
library(PsyMet)
responses$sigmoid <-  base::rep(func[1],base::nrow(responses))
library(tidyr)
library(PsyMet)
library(PsyMet)
rm(likelihood_log())
rm(likelihood_log
, multigenerate()
)
rm(likelihood_log, multigenerate)
rm(x)
library(PsyMet)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
library(PsyMet)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
x <- c(log(seq(2,10,2)), 0, - log(seq(1,10,2)))
#Multigenerate
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
dat
debugSource('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
x <- c(log(seq(2,10,2)), 0, - log(seq(1,10,2)))
#Multigenerate
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
responses
responses
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
debugSource('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
library(PsyMet)
rm(multigenerate)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
dat
debugSource('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
responses
order(responses, level)
order(responses)
responses[order(responses$level)]
responses[with(responses(order(responses$level))]
responses[with(responses,order(responses$level))]
with(responses,order(level))
responses[with(responses),order(level)]
responses[with(responses,order(level))]
responses[with(responses,order(level)),]
order(responses$level)
responses[order(responses,level),]
responses[order(responses$level),]
debugSource('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
responses
responses
simulatedResp
responses
c
dat
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
responses
responses
results
row
row$data
responses
oNam
nest_vars
group_vars
data()
data
is_empty(nest_vars)
nest_vars
if_grouped_df(data)
is_grouped_df(data)
dplyr::is_grouped_df(data)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
source('~/Documents/Bakalarka/PsyMet/R/multigenerate.R', echo=TRUE)
dat <- multigenerate(list(c("gumbel_r","ab", 0, 0, -0.5, 0.5),
c("gumbel_l","weibull", 0, 0,0.75, 2),
c("gauss","linear", 0, 0, 2, -0.5),
c("logistic","linear", 0, 0, 2, 0.5))
, x, rep(40,length(x)),
5
)
dat
library(PsyMet)
rm(list=ls())
library(PsyMet)
source('~/Documents/Bakalarka/PsyMet/R/imp_threshold.R', echo=TRUE)
source('~/Documents/Bakalarka/PsyMet/R/imp_threshold.R')
imp_threshold(0,0,gumbel_l,weibull,1,2)
imp_threshold(0,0,gumbel_l,weibull,1,2)
debugSource('~/Documents/Bakalarka/PsyMet/R/imp_threshold.R')
imp_threshold(0,0,gumbel_l,weibull,2,2)
imp_threshold(0,0,"gumbel_l","weibull",2,2)
source('~/Documents/Bakalarka/PsyMet/R/imp_threshold.R')
imp_threshold(0,0,"gumbel_l","weibull",2,2)
imp_threshold(0,0,"gumbel_l","weibull",0,2)
imp_threshold(0,0,"gumbel_l","weibull",0.5,2)
imp_threshold(0,0,"gumbel_l","weibull",0.5,4)
imp_threshold(0,0,"gumbel_l","weibull",7,4)
imp_threshold(0,0,"gumbel_l","weibull",7,8)
imp_threshold(0,0,"gumbel_l","weibull",7,9)
imp_threshold(0,0,"gumbel_l","weibull",7,1)
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,9))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,4))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,0.5))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,2))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.5))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.4))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.1))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.000))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.0001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.00000001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.000001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.00001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.0001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.001))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.01))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.1))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.09))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.08))
unlist(imp_threshold(0,0,"gumbel_l","weibull",7,1.07))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,1.07))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,2))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,3))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,7))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,8))
unlist(imp_threshold(0,0,"gumbel_l","weibull",1,10))
source('~/Documents/Bakalarka/PsyMet/R/imp_threshold.R')
imp_threshold(0,0,"gumbel_l","weibull",7,1)
imp_threshold(0,0,"gumbel_l","linear",4,4)
imp_threshold(0,0,"gumbel_l","linear",4,7)
imp_threshold(0,0,"gumbel_l","linear",1,1)
imp_threshold(0,0,"gumbel_l","linear",1,4)
imp_threshold(0,0,"gumbel_l","linear",1,7)
imp_threshold(0,0,"gauss","linear",1,7)
imp_threshold(0,0,"gauss","linear",7,7)
imp_threshold(0,0,"gauss","linear",7,4)
imp_threshold(0,0,"gauss","linear",1,1)
imp_threshold(0,0,"gauss","linear",1,1)
imp_threshold(0,0,"gauss","linear",1,8)
imp_threshold(0,0,"gauss","linear",1,9)
imp_threshold(0,0,"gauss","linear",1,2)
imp_threshold(0,0,"gauss","linear",1,3)
imp_threshold(0,0,"gauss","linear",1,4)
imp_threshold(0,0,"gauss","linear",1,5)
imp_threshold(0,0,"gauss","linear",1,6)
imp_threshold(0,0,"gauss","linear",1,7)
imp_threshold(0,0,"gauss","linear",1,8)
imp_threshold(0,0,"gauss","linear",1,9)
imp_threshold(0,0,"gauss",linear,1,9)
as.character(linear())
as.character(linear
)
library(PsyMet)
